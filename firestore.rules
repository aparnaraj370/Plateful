rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Orders can be read/written by the user who created them or restaurant owner
    // Fixed: Added proper handling for both existing orders and new order creation
    match /orders/{orderId} {
      allow read, write: if request.auth != null && (
        // For existing orders, check against the stored userId
        (resource != null && request.auth.uid == resource.data.userId) ||
        // For new orders being created, check against the userId being set
        (request.resource != null && request.auth.uid == request.resource.data.userId) ||
        // Allow restaurant owners to access orders for their restaurant
        (resource != null && request.auth.uid == resource.data.restaurantId) ||
        (request.resource != null && request.auth.uid == request.resource.data.restaurantId)
      );
    }
    
    // Restaurants can be read by anyone, written by the owner
    match /restaurants/{restaurantId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == restaurantId;
    }
    
    // Community posts can be read by anyone, written by authenticated users
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        // For new posts
        (request.resource != null && request.auth.uid == request.resource.data.authorId) ||
        // For existing posts
        (resource != null && request.auth.uid == resource.data.authorId)
      );
    }
    
    // Allow authenticated users to read restaurant reviews
    match /reviews/{reviewId} {
      allow read: if request.auth != null;
      // Only the review author can write/update their reviews
      allow write: if request.auth != null && (
        (request.resource != null && request.auth.uid == request.resource.data.userId) ||
        (resource != null && request.auth.uid == resource.data.userId)
      );
    }
    
    // Allow authenticated users to read general app data (like categories, etc.)
    match /app_data/{document} {
      allow read: if request.auth != null;
    }
  }
}
